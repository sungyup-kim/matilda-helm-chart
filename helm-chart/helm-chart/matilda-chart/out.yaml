---
# Source: matilda-chart/templates/matilda-backend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: matilda-backend
  namespace: kubeflow
spec:
  selector:
    app: matilda-backend
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: 8000
---
# Source: matilda-chart/templates/matilda-backend-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: project-pv-claim
  namespace: kubeflow
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeMode: Filesystem
---
# Source: matilda-chart/templates/matilda-backend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: matilda-backend
  namespace: kubeflow
spec:
  replicas: 
  selector:
    matchLabels:
      app: matilda-backend
  template:
    metadata:
      labels:
        app: matilda-backend
    spec:
      hostNetwork: false
      volumes:
        - name: project-pv
          persistentVolumeClaim:
            claimName: project-pv-claim
        - hostPath:
            path: /var/run/docker.sock
          name: dockersock
        - name: docker-config
          secret:
            defaultMode: 420
            items:
            - key: .dockerconfigjson
              path: config.json
            secretName: regcred
      containers:
      - name: matilda-backend
        image: nexus.mlops.matilda-mzc.com/:
        command: ["gunicorn"]
        args: ["mlopsapi.wsgi:application", "--timeout", "15", "--bind", "0.0.0.0:8000", "--env", "DJANGO_SETTINGS_MODULE=", "-w", "3"]
        imagePullPolicy: IfNotPresent
        env:
        - name: KUBECONFIG
          value: /kube/kube-config-hdx
        ports: []
        resources:
          limits:
            cpu: "2"
            memory: "2000Mi"
          requests:
            cpu: 10m
            memory: "200Mi"
        volumeMounts:
          - mountPath: "/home/mlops/project"
            name: project-pv
          - mountPath: /var/run/docker.sock
            name: dockersock
          - mountPath: /home/mlops/.docker/
            name: docker-config
        ports:
        - containerPort: 8000
      imagePullSecrets:
      - name: regcred
